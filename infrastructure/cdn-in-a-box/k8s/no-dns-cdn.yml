## Edge and Mid cache tier
apiVersion: v1
kind: Service
metadata:
  name: edge
  namespace: infra
spec:
  selector:
    func: cache
    role: edge
  ports:
    - port: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cdn-edge-tier
  namespace: infra
spec:
  replicas: 1
  selector:
    matchLabels:
      func: cache
      role: edge
  template:
    metadata:
      labels:
        func: cache
        role: edge
    spec:
      hostname: edge
      volumes:
      - name: secret-dir
        persistentVolumeClaim:
          claimName: cdn-secret
      containers:
      - name: edge-tier
        image: gabbro:30500/cdn-edge-tier:0.1
        imagePullPolicy: Never
        volumeMounts:
          - mountPath: /shared
            name: secret-dir
        envFrom:
          - configMapRef:
              name: cdn-config
---
apiVersion: v1
kind: Service
metadata:
  name: mid
  namespace: infra
spec:
  selector:
    func: cache
    role: mid
  ports:
    - port: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cdn-mid-tier
  namespace: infra
spec:
  replicas: 1
  selector:
    matchLabels:
      func: cache
      role: mid
  template:
    metadata:
      labels:
        func: cache
        role: mid
    spec:
      hostname: mid
      volumes:
      - name: secret-dir
        persistentVolumeClaim:
          claimName: cdn-secret
      containers:
      - name: mid-tier
        image: gabbro:30500/cdn-mid-tier:0.1
        imagePullPolicy: Never
        volumeMounts:
          - mountPath: /shared
            name: secret-dir
        envFrom:
          - configMapRef:
              name: cdn-config
---
## 2 DBs: for influxdb: traffic stats, and for db: traffic operations
apiVersion: v1
kind: Service
metadata:
  name: influxdb 
  namespace: infra
spec:
  selector:
    func: db
    role: stat
  ports:
    - port: 8086
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cdn-stat-db
  namespace: infra
spec:
  replicas: 1
  selector:
    matchLabels:
      func: db
      role: stat
  template:
    metadata:
      labels:
        func: db
        role: stat
    spec:
      hostname: influxdb
      volumes:
      - name: secret-dir
        persistentVolumeClaim:
          claimName: cdn-secret
      containers:
      - name: stat-db
        image: gabbro:30500/cdn-stat-db:0.1
        imagePullPolicy: Never
        ports:
        - containerPort: 8086
        volumeMounts:
          - mountPath: /shared
            name: secret-dir
        envFrom:
          - configMapRef:
              name: cdn-config
---
apiVersion: v1
kind: Service
metadata:
  name: db 
  namespace: infra
spec:
  selector:
    func: db
    role: ops
  ports:
    - port: 5432
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cdn-ops-db
  namespace: infra
spec:
  replicas: 1
  selector:
    matchLabels:
      func: db
      role: ops
  template:
    metadata:
      labels:
        func: db
        role: ops
    spec:
      hostname: db
      volumes:
      - name: secret-dir
        persistentVolumeClaim:
          claimName: cdn-secret
      - name: postgres-data
        emptyDir: {}
      containers:
      - name: ops-db
        image: gabbro:30500/cdn-ops-db:0.1
        imagePullPolicy: Never
        ports:
        - containerPort: 5432
        volumeMounts:
          - mountPath: /shared
            name: secret-dir
          - mountPath: /var/lib/postgresql/data
            name: postgres-data
        envFrom:
          - configMapRef:
              name: cdn-config
---
## Enroller
apiVersion: v1
kind: Service
metadata:
  name: enroller
  namespace: infra
spec:
  selector:
    func: enroll
## somehow no port exposing in docker-compose file
  ports:
    - port: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cdn-enroller
  namespace: infra
spec:
  replicas: 1
  selector:
    matchLabels:
      func: enroll
  template:
    metadata:
      labels:
        func: enroll
    spec:
      hostname: enroller
      volumes:
      - name: secret-dir
        persistentVolumeClaim:
          claimName: cdn-secret
      containers:
      - name: enroller
        image: gabbro:30500/cdn-enroller:0.1
        imagePullPolicy: Never
        ports:
        - containerPort: 80
        volumeMounts:
          - mountPath: /shared
            name: secret-dir
        envFrom:
          - configMapRef:
              name: cdn-config
---
#vault: create credentials
apiVersion: v1
kind: Service
metadata:
  name: trafficvault
  namespace: infra
spec:
  selector:
    func: secret
## not sure what these ports for..
  ports:
    - name: port0
      port: 8088
    - name: port1
      port: 8087
    - name: port2
      port: 8098
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cdn-traffic-vault
  namespace: infra
spec:
  replicas: 1
  selector:
    matchLabels:
      func: secret
  template:
    metadata:
      labels:
        func: secret
    spec:
      hostname: trafficvault
      volumes:
      - name: secret-dir
        persistentVolumeClaim:
          claimName: cdn-secret
      - name: schema
        persistentVolumeClaim:
          claimName: cdn-schemas
      containers:
      - name: vault
        image: gabbro:30500/cdn-vault:0.2
        imagePullPolicy: Never
        ports:
        - containerPort: 8087
        - containerPort: 8088
        - containerPort: 8098
        env:
        - name: CLUSTER_NAME
          value: trafficvault
        volumeMounts:
          - mountPath: /shared
            name: secret-dir
          - mountPath: /etc/riak/schemas
            name: schema
        envFrom:
          - configMapRef:
              name: cdn-config
---
#statistic manager: no expose service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cdn-stats
  namespace: infra
spec:
  replicas: 1
  selector:
    matchLabels:
      func: stats
  template:
    metadata:
      labels:
        func: stats
    spec:
      hostname: trafficstats
      volumes:
      - name: secret-dir
        persistentVolumeClaim:
          claimName: cdn-secret
      containers:
      - name: stats
        image: gabbro:30500/cdn-stats:0.1
        imagePullPolicy: Never
        volumeMounts:
          - mountPath: /shared
            name: secret-dir
        envFrom:
          - configMapRef:
              name: cdn-config
---
#operation(API) servers: Perl and Go
apiVersion: v1
kind: Service
metadata:
  name: trafficops-perl
  namespace: infra
spec:
  selector:
    func: ops
    lang: perl
  ports:
    - port: 443
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cdn-ops-perl
  namespace: infra
spec:
  replicas: 1
  selector:
    matchLabels:
      func: ops
      lang: perl
  template:
    metadata:
      labels:
        func: ops
        lang: perl
    spec:
      hostname: trafficops-perl
      volumes:
      - name: secret-dir
        persistentVolumeClaim:
          claimName: cdn-secret
      - name: ops-ca
        persistentVolumeClaim:
          claimName: cdn-ops-ca
      containers:
      - name: ops-perl
        image: gabbro:30500/cdn-ops-perl:0.2
        imagePullPolicy: Never
        ports:
        - containerPort: 443
        volumeMounts:
          - mountPath: /shared
            name: secret-dir
          - mountPath: /ca
            name: ops-ca
        envFrom:
          - configMapRef:
              name: cdn-config
---
apiVersion: v1
kind: Service
metadata:
  name: trafficops
  namespace: infra
spec:
  selector:
    func: ops
    lang: go
  ports:
    - port: 443
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cdn-ops
  namespace: infra
spec:
  replicas: 1
  selector:
    matchLabels:
      func: ops
      lang: go
  template:
    metadata:
      labels:
        func: ops
        lang: go
    spec:
      hostname: trafficops
      volumes:
      - name: secret-dir
        persistentVolumeClaim:
          claimName: cdn-secret
      containers:
      - name: ops-go
        image: gabbro:30500/cdn-ops-go:0.2
        imagePullPolicy: Never
        ports:
        - containerPort: 443
        volumeMounts:
          - mountPath: /shared
            name: secret-dir
        envFrom:
          - configMapRef:
              name: cdn-config
---
#Router
apiVersion: v1
kind: Service
metadata:
  name: trafficrouter
  namespace: infra
spec:
  selector:
    func: router
  ports:
    - name: dns-tcp
      protocol: TCP
      port: 53
    - name: dns-udp
      protocol: UDP
      port: 53
    - name: port1
      port: 80
    - name: port2
      port: 443
    - name: port3
      port: 3333
    - name: port4
      port: 3443
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cdn-router
  namespace: infra
spec:
  replicas: 1
  selector:
    matchLabels:
      func: router
  template:
    metadata:
      labels:
        func: router
    spec:
      hostname: trafficrouter
      volumes:
      - name: secret-dir
        persistentVolumeClaim:
          claimName: cdn-secret
      containers:
      - name: router
        image: gabbro:30500/cdn-router:0.1
        imagePullPolicy: Never
        ports:
        - containerPort: 3333
        - containerPort: 3443
        - containerPort: 443
        - containerPort: 53
        - containerPort: 80
        volumeMounts:
          - mountPath: /shared
            name: secret-dir
        envFrom:
          - configMapRef:
              name: cdn-config
---
#Monitor
apiVersion: v1
kind: Service
metadata:
  name: trafficmonitor
  namespace: infra
spec:
  selector:
    func: monitor
  ports:
    - port: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cdn-monitor
  namespace: infra
spec:
  replicas: 1
  selector:
    matchLabels:
      func: monitor
  template:
    metadata:
      labels:
        func: monitor
    spec:
      hostname: trafficmonitor
      volumes:
      - name: secret-dir
        persistentVolumeClaim:
          claimName: cdn-secret
      containers:
      - name: router
        image: gabbro:30500/cdn-monitor:0.1
        imagePullPolicy: Never
        ports:
        - containerPort: 80
        volumeMounts:
          - mountPath: /shared
            name: secret-dir
        envFrom:
          - configMapRef:
              name: cdn-config
---
#Mock origin server
apiVersion: v1
kind: Service
metadata:
  name: origin
  namespace: infra
spec:
  selector:
    func: data-server
  ports:
    - port: 443
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cdn-server
  namespace: infra
spec:
  replicas: 1
  selector:
    matchLabels:
      func: data-server
  template:
    metadata:
      labels:
        func: data-server
    spec:
      hostname: origin
      volumes:
      - name: secret-dir
        persistentVolumeClaim:
          claimName: cdn-secret
      - name: content-dir
        persistentVolumeClaim:
          claimName: cdn-content
      containers:
      - name: data-server
        image: gabbro:30500/cdn-service-server:0.1
        imagePullPolicy: Never
        ports:
        - containerPort: 443
        volumeMounts:
          - mountPath: /shared
            name: secret-dir
          - mountPath: /var/www/html
            name: content-dir
        envFrom:
          - configMapRef:
              name: cdn-config
---
apiVersion: v1
kind: Pod
metadata:
  name: cdn-client
  namespace: infra
spec:
  hostname: client
  volumes:
  - name: secret-dir
    persistentVolumeClaim:
      claimName: cdn-secret
  containers:
  - name: client
    image: gabbro:30500/tc-client
    imagePullPolicy: Never
    volumeMounts:
      - mountPath: /shared
        name: secret-dir
    envFrom:
      - configMapRef:
          name: cdn-config
